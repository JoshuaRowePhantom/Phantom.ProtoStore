namespace Phantom.ProtoStore.FlatBuffers;

table DatabaseHeaderExtentName {
    header_copy_number : uint64;
}

table IndexExtentName {
    partition_number : uint64;
    index_number : uint64;
    level : uint64;
    index_name : string;
}

table IndexDataExtentName {
    index_extent_name : IndexExtentName;
}

table IndexHeaderExtentName {
    index_extent_name : IndexExtentName;
}

table LogExtentName {
    log_extent_sequence_number : uint64;
}

union ExtentName {
    IndexHeaderExtentName,
    IndexDataExtentName,
    DatabaseHeaderExtentName,
    LogExtentName
}

table DatabaseHeader {
    version : uint32;
    log_alignment:uint32;
    log_replay_extent_names : [LogExtentName];
    epoch : uint64;
    next_index_number : uint64;
    next_partition_number : uint64;
}

enum ExtentFormatVersion : uint8 {
    V1 = 1
}

// An ExtentHeader is written as a rooted size-prefixed table to the start
// of an extent.
table ExtentHeader {
    extent_version : ExtentFormatVersion = V1;
    extent_name : ExtentName;
}

// MessageHeader_V1 is used in ExtentFormatVersion_V1
struct MessageHeader_V1
{
    crc32 : uint32;
    message_size : uint32;
}

file_identifier "PSEX";
