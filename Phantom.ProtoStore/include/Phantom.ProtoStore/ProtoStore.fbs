namespace Phantom.ProtoStore.FlatBuffers;

// Expect to be in the range ("Ascending", "Descending")
attribute SortOrder;

table DatabaseHeaderExtentName {
    header_copy_number : uint64;
}

table IndexExtentName {
    partition_number : uint64;
    index_number : uint64;
    level : uint8;
    index_name : string;
}

table IndexDataExtentName {
    index_extent_name : IndexExtentName;
}

table IndexHeaderExtentName {
    index_extent_name : IndexExtentName;
}

table LogExtentName {
    log_extent_sequence_number : uint64;
}

union ExtentNameUnion {
    IndexHeaderExtentName,
    IndexDataExtentName,
    DatabaseHeaderExtentName,
    LogExtentName
}

table ExtentName
{
    extent_name : ExtentNameUnion;
}

enum FlatBuffersGraphEncodingOptions : uint8 {
    // No duplicate detection is done. 
    // This is the fastest for writing data.
    NoDuplicateDetection,

    // Within the entire DAG of object written to a message,
    // detect duplicate objects and encode them as self-relative
    // references within the message.
    //
    // If the message encoding option is SerializedByteMessage,
    // then the duplicate detection is done within the scope
    // of the single message.
    //
    // If the message encoding option is EmbeddedMessage,
    // then the duplicate detection is done within the scope
    // of all the objects written as a single message to the partition.
    //
    // The duplicate detection still requires the object to be a
    // directed acyclic graph.
    DagDuplicateDetection
}

enum FlatBuffersStringEncodingOptions : uint8 {
    // Share strings when copying an object graph.
    ShareStrings,

    // Do not share strings when copying an object graph.
    DontShareStrings
}

enum FlatBuffersMessageEncodingOptions : uint8 {
    // Encode the message as a flatbuffer root table.
    // This is best for extracting messages and sending them
    // to other processes without having to reencode them.
    SerializedByteMessage,

    // Encode the message as a sub-table within the partition.
    // This is best for reducing the storage size of a partition,
    // and for local processing of the stored messages.
    //
    // DagDuplicateDetection works best with this option.
    EmbeddedMessage
}
